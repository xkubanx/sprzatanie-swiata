{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kuban/sprzatanie-swiata/lib/mongodb.ts"],"sourcesContent":["import {MongoClient} from \"mongodb\";\r\n\r\nif (!process.env.MONGODB_URI) {\r\n    throw new Error('Invalid/Missing environment variable: \"MONGODB_URI\"');\r\n}\r\n\r\nconst uri = process.env.MONGODB_URI;\r\nconst options = {};\r\n\r\nlet clientPromise: MongoClient;\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n    // In development mode, use a global variable so that the value\r\n    // is preserved across module reloads caused by HMR (Hot Module Replacement).\r\n    const globalWithMongo = global as typeof globalThis & {\r\n        _mongoClient?: MongoClient;\r\n    };\r\n\r\n    if (!globalWithMongo._mongoClient) {\r\n        globalWithMongo._mongoClient = new MongoClient(uri, options);\r\n    }\r\n    clientPromise = globalWithMongo._mongoClient;\r\n} else {\r\n    // In production mode, it's best to not use a global variable.\r\n    clientPromise = new MongoClient(uri, options);\r\n}\r\n\r\n// Export a module-scoped MongoClient. By doing this in a\r\n// separate module, the client can be shared across functions.\r\nexport default clientPromise;"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC1B,MAAM,IAAI,MAAM;AACpB;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AAEjB,IAAI;AAEJ,wCAA4C;IACxC,+DAA+D;IAC/D,6EAA6E;IAC7E,MAAM,kBAAkB;IAIxB,IAAI,CAAC,gBAAgB,YAAY,EAAE;QAC/B,gBAAgB,YAAY,GAAG,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;IACxD;IACA,gBAAgB,gBAAgB,YAAY;AAChD,OAAO;;AAGP;uCAIe","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kuban/sprzatanie-swiata/pages/api/reports.tsx"],"sourcesContent":["import {NextApiRequest, NextApiResponse} from 'next';\r\nimport clientPromise from \"@/lib/mongodb\";\r\nimport {IReport} from \"@/interfaces/interfaces\";\r\n\r\nasync function handler(req: NextApiRequest, res: NextApiResponse) {\r\n    switch (req.method) {\r\n        case \"GET\":\r\n            const reports = await getReports();\r\n            res.status(200).json(reports);\r\n            break;\r\n        case \"POST\":\r\n            const report = req.body as IReport;\r\n            const result = await addReport(report);\r\n            res.status(201).json(result);\r\n            break;\r\n        default:\r\n            res.status(405).end();\r\n            break;\r\n    }\r\n}\r\n\r\nasync function getReports() {\r\n    try {\r\n        const client = await clientPromise;\r\n        const db = client.db(\"reports_db\");\r\n        return await db\r\n            .collection(\"reports\")\r\n            .find({})\r\n            .sort({metacritic: -1})\r\n            .toArray()\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n}\r\n\r\nasync function addReport(report: IReport) {\r\n    try {\r\n        const client = await clientPromise;\r\n        const db = client.db(\"reports_db\");\r\n        return await db.collection(\"reports\").insertOne(\r\n            {\r\n                place: report.place,\r\n                square: report.square,\r\n                description: report.description,\r\n                amountAndType: report.amountAndType\r\n            }\r\n        );\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n}\r\n\r\nexport default handler;\r\n"],"names":[],"mappings":";;;AACA;;AAGA,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC5D,OAAQ,IAAI,MAAM;QACd,KAAK;YACD,MAAM,UAAU,MAAM;YACtB,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YACrB;QACJ,KAAK;YACD,MAAM,SAAS,IAAI,IAAI;YACvB,MAAM,SAAS,MAAM,UAAU;YAC/B,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YACrB;QACJ;YACI,IAAI,MAAM,CAAC,KAAK,GAAG;YACnB;IACR;AACJ;AAEA,eAAe;IACX,IAAI;QACA,MAAM,SAAS,MAAM,uGAAA,CAAA,UAAa;QAClC,MAAM,KAAK,OAAO,EAAE,CAAC;QACrB,OAAO,MAAM,GACR,UAAU,CAAC,WACX,IAAI,CAAC,CAAC,GACN,IAAI,CAAC;YAAC,YAAY,CAAC;QAAC,GACpB,OAAO;IAChB,EAAE,OAAO,GAAG;QACR,QAAQ,KAAK,CAAC;IAClB;AACJ;AAEA,eAAe,UAAU,MAAe;IACpC,IAAI;QACA,MAAM,SAAS,MAAM,uGAAA,CAAA,UAAa;QAClC,MAAM,KAAK,OAAO,EAAE,CAAC;QACrB,OAAO,MAAM,GAAG,UAAU,CAAC,WAAW,SAAS,CAC3C;YACI,OAAO,OAAO,KAAK;YACnB,QAAQ,OAAO,MAAM;YACrB,aAAa,OAAO,WAAW;YAC/B,eAAe,OAAO,aAAa;QACvC;IAER,EAAE,OAAO,GAAG;QACR,QAAQ,KAAK,CAAC;IAClB;AACJ;uCAEe","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kuban/sprzatanie-swiata/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kuban/sprzatanie-swiata/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kuban/sprzatanie-swiata/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kuban/sprzatanie-swiata/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,mHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,mHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}